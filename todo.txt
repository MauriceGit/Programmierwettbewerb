========================================================================
ToDo:
========================================================================

Server:
- Middleware/Server: Channel überschreiben mit neuen Daten (WICHTIG, wenn noch nicht umgesetzt, bin mir grade nicht sicher...)
- Bot-Spawnpunkt fair setzen
- Check, was passiert, wenn ein Bot deutlich öfter Daten schreibt, als er darf (muss verworfen werden!!!)
- Middleware/Server: Port beim Starten mit übergeben, sodass zwei Server parallel laufen können.
- Zwei Guis zur Verfügung stellen. Normales Testsystem + Wöchentliches bewertetes Testsystem (und für uns)
- Skript schreiben, welches folgendes tut:
    - Server starten
    - SVN updates für alle Repositories
    - Für jedes Repos die Middleware mit dem 1. Namen aus bot.names und 'n' Bots startet
    - Warten und nach 'n_2' Minuten den Server entweder kontrolliert oder hart beendet
- Cron-Job einrichten für das Skript. Zum Beispiel wöchentlich.
- Server muss Bmp (zum Beispiel)-Bilder laden können. Er speichert dann alle Pixel mit einem Grauwert von > 0 in ein Array.
- 3 Bilder werden geladen. Bot-Spawns, Toxin-Spawns, Food-Spawns.
- Spawn-Position Bots/Food/Toxin dann ermitteln über einen/mehrere Zugriffe auf das Array mit
    Wahrscheinlichkeiten. Wahrscheinlichkeiten abhängig vom Grauwert. Weiß == 0, Schwarz == 1.

Gui:
- Der aktuelle Sichtbereich im Fenster muss noch den Modus unterstützen:
    - Eine bestimmte Team-ID verfolgen. Alle Bots dieses Teams müssen im Sichtbereich sein!

Formeln für die Teilnehmer:
- Formel für Kontakt zwischen Blob und Blob/Food/Toxin (Entfernung, wann wird was gefressen!)
- Basisgeschwindigkeitsvektor (Was ist das und so)
- Beim Splitten/Explodieren kommt ein zusätzlicher Vektor ins Spiel, der auf die Basisgeschwindigkeit addiert wird
- Der Split-Vektor wird in jedem Zeitschritt *= 0.95 (oder so) genommen.
- Eventuell Formel, wann ca. 90% der maximalen Split-Entfernung erreicht wurde (20 Frames oder so)
- Formeln für Food abwerfen / Toxin-Split. Evtl. den gleichen Split-Vektor nehmen?!
